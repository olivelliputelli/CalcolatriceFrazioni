@page "/fetchdata"

@inject IDbContextFactory<ApplicationDbContext> DbFactory

<EditForm Model="@Categoria" OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <label>
        Nome categoria
        <InputText @bind-Value="Categoria.Nome" />
    </label>
    <button type="submit" class="btn btn-primary">
        Aggiungi categoria
    </button>
</EditForm>

<table class="table">
    <thead>
        <tr>
            <th>#</th>
            <th>Nome</th>
            <th>Operazioni</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Categorie)
        {
            <tr>
                <td>@item.CategoriaId</td>
                <td>@item.Nome</td>
                <td><button @onclick="@(() => Elimina(@item))" class="btn btn-warning">
        Elimina
    </button></td>
            </tr>
        }
    </tbody>
</table>

@code {
    public Categoria? Categoria { get; set; } = new();
    private List<Categoria>? Categorie { get; set; } = new();

    protected override void OnInitialized()
    {
        LoadCategorie();
    }

    private void HandleSubmit()
    {
        using var context = DbFactory.CreateDbContext();
        context.Categorie.Add(Categoria);
        context.SaveChanges();
        Categoria = new();
        Categorie = context.Categorie.ToList();
    }

    private void Elimina(Categoria categoriaDaEliminare)
    {
        using var context = DbFactory.CreateDbContext();
        context.Remove(categoriaDaEliminare);
        context.SaveChanges();
        LoadCategorie();
    }

    private void LoadCategorie()
    {
        using var context = DbFactory.CreateDbContext();
        Categorie = context.Categorie.ToList();
    }
}
